name: Organizerify Frontend deploy

on:
  push:
    branches:
      - master

jobs:
  build-tag-and-release-frontend:
    name: Download packages, build and tag/release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache npm packages
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Download packages
        run: yarn

      - name: Build all packages
        run: yarn build:packages

      - name: Build frontend
        run: yarn build:frontend

      - name: Create tag for release
        id: create-tag
        run: echo "::set-output name=tag::$(git log -1 --pretty='%ad_%h' --date=format:'%d.%m.%Y-%H%M')"

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create-tag.outputs.tag }}
          release_name: Release ${{ steps.create-tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Create release asset
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r bundle.zip ./frontend/build/*.*

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./bundle.zip
          asset_name: bundle.zip
          asset_content_type: application/zip
